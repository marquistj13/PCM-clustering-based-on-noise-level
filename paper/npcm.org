#+STARTUP: content
#+OPTIONS: 
#+OPTIONS: toc:nil
# set DATE to void to avoid it's display
#+DATE: 
#+LATEX_CLASS: IEEEtran
#+LaTeX_CLASS_OPTIONS: [journal]
#+LATEX_HEADER: \usepackage[thmmarks, amsmath, thref]{ntheorem}
#+LATEX_HEADER: \theoremstyle{definition}
# Adds automatic line break, if heading is too long
#+LATEX_HEADER: \makeatletter \renewtheoremstyle{plain} {\item{\theorem@headerfont ##1\ ##2\theorem@separator}~}  {\item{\theorem@headerfont ##1\ ##2\ (##3)\theorem@separator}~}
#+LATEX_HEADER: \theoremheaderfont{\normalfont\bfseries}
#+LATEX_HEADER: \theoremseparator{:}
#+LATEX_HEADER: \theorembodyfont{\normalfont}
#+LATEX_HEADER: \theoremsymbol{\ensuremath{\blacksquare}}
#+LATEX_HEADER: \newtheorem{definition}{Definition}

#+LATEX_HEADER: \usepackage[caption=false,font=footnotesize]{subfig}
#+LATEX_HEADER: \usepackage{algorithm}
#+LATEX_HEADER: \usepackage{algpseudocode}
#+LATEX_HEADER: \renewcommand{\algorithmicrequire}{\textbf{Input:}}
#+LATEX_HEADER: \newcommand{\crhd}{\raisebox{.25ex}{$\rhd$}}
#+LATEX_HEADER: \renewcommand{\algorithmiccomment}[1]{{\hspace{-0.6cm}$\crhd$ {\it {#1}}}}


# bold and italic vector
#+LATEX_HEADER: \newcommand{\vect}[1]{\boldsymbol{#1}}
# In IEEEtran_HOWTO the equations section on page 8. this 2500 config is to estore IEEEtran ability to automatically break within multiline equations
#+LATEX_HEADER: \interdisplaylinepenalty=2500


#+BEGIN_LaTeX
\bibliographystyle{IEEEtran}
\bibliography{D:/emacs/etc/ZoteroOutput,IEEEabrv}
#+END_LaTeX

#+TITLE: PCM Clustering based on Noise Level
#+BEGIN_LaTeX
\begin{abstract}
Possibilistic c-Means (PCM) based clustering algorithms  are widely used in the literature. The unified framework (UPCM) of  PCM and adaptive PCM (APCM) controls the clustering process from the perspective of uncertainty and UPCM can effectively discover the underlying structure of the dataset. However, UPCM has three parameters to choose.
In this paper, we present an extension of UPCM, i.e., noise level based pcm (NPCM), to ease the parameter-choosing issue and also to  improve UPCM.
NPCM runs with two parameters, $m_{ini}$ is the potentially over-specified initial number of clusters, $\alpha$ is the noise level of the dataset which characterizes minimum closeness of clusters. NPCM then discovers the true number of clusters. $\alpha$ controls the closeness of generated clusters. Another property of NPCM is that the bandwidth (radius) of each cluster can be correctly estimated, furthermore, NPCM automatically calculates the uncertainty of the estimated bandwidth ($\sigma_v$). More specifically, a large bandwidth corresponds to a large bandwidth uncertainty $\sigma_v$. 
\end{abstract}
#+END_LaTeX 
** Introduction
Our contributions are summarized as follows:
1. We find that both APCM and UPCM suffer from the problem of background noise clusters, i.e., the background noise cluster are highly possible to become very large and finally merge with other physical clusters, so that there is only one big cluster in the final result.
** Background Knowledge and Motivations
*** The PCM and APCM Clustering Algorithms
The objective of Possibilistic c-means (PCM) \cite{krishnapuram_possibilistic_1993} is to minimize the following cost:
#+BEGIN_LaTeX
\begin{equation}
J(\mathbf{\Theta},\mathbf{U})=\sum_{j=1}^{c}J_j=\sum_{j=1}^{c}\left[\sum_{i=1}^{N}u_{ij}d_{ij}^2+\gamma_j \sum_{i=1}^{N}f(u_{ij})\right]
\end{equation}
#+END_LaTeX
where $f(\cdot)$ can be chosen as:
#+BEGIN_LaTeX
\begin{equation}
f(u_{ij})=u_{ij}\log u_{ij}-u_{ij}
\end{equation}
#+END_LaTeX 
$\mathbf{\Theta}=(\boldsymbol{\theta}_1,\ldots,\boldsymbol{\theta}_c)$ is a $c$-tuple of prototypes, $d_{ij}$ is the distance of feature point $\mathbf{x}_i$ to prototype $\boldsymbol{\theta}_j$, $N$ is the total number of feature vectors, $c$ is the number of clusters, and $\mathbf{U}=[u_{ij}]$ is a $N\times c$ matrix where $u_{ij}$ denotes the /degree of compatibility/ of $\mathbf{x}_i$ to the $j\text{th}$ cluster $C_j$ which is represented by $\boldsymbol{\theta}_j$. $\gamma_j$ can be seen as a bandwidth parameter of the possibility (membership) distribution for each cluster and is usually fixed in PCM based algorithms. Note that either $\gamma_j$ or $\sqrt{\gamma_j}$ can be referred to as the bandwidth for convenience in this paper.

Compared with Fuzzy c-means (FCM) \cite{bezdek_pattern_2013}, PCM relaxes the constraint that the memberships of a datum to all clusters sum to $1$. So the generated memberships can be indicated as the typicality of a point to the cluster. This modification also leads to higher noise immunity with respect to FCM based algorithms \cite{barni_comments_1996}.

Minimizing $J(\mathbf{\Theta},\mathbf{U})$ with respect to $u_{ij}$ and $\boldsymbol{\theta}_j$ leads to the the following two update equations:
#+BEGIN_LaTeX
\begin{IEEEeqnarray}{ll}
u_{ij}&=\exp\left(-\frac{d^2_{ij}}{\gamma_j}\right) \label{pcm_u_update}  \\
\boldsymbol{\theta}_j&=\frac{\Sigma_{i=1}^Nu_{ij}\mathbf{x}_i}{\Sigma_{i=1}^Nu_{ij}} \label{pcm_theta_update}
\end{IEEEeqnarray}
#+END_LaTeX

The major problem of PCM is that its performance relies heavily on good initial partitions and parameters \cite{nasraoui_improved_1996}. More specifically, the $c$ dense regions found may be coincident, as reported in \cite{barni_comments_1996}. Adaptive PCM (APCM) \cite{xenaki_novel_2016} solves this problem by adapting $\gamma_j$ at each iteration, and the clusters with $\gamma_j=0$ are eliminated. To handle the case where two physical clusters with very different variance are located very close to each other, APCM introduces a parameter $\alpha$ to manually scale the bandwidth:
#+BEGIN_LaTeX
\begin{equation}
\label{corrected_eta}
\gamma_j=\frac{\hat{\eta}}{\alpha}\eta_j
\end{equation}
#+END_LaTeX 
where $\hat{\eta}$ is a constant defined as the minimum among all initial $\eta_j\text{s}$, $\hat{\eta}=\min_j\eta_j$, and $\alpha$ is chosen so that the quantity $\hat{\eta}/\alpha$ equals to the mean absolute deviation ($\eta_j$)  of the smallest physical cluster formed in the dataset. $\eta_j$ is initialized as
#+BEGIN_LaTeX
\begin{equation}
\label{apcm_eta_init}
\eta_j=\frac{\Sigma_{i=1}^Nu_{ij}^{FCM}d_{ij}}{\Sigma_{i=1}^Nu_{ij}^{FCM}}  
\end{equation}
#+END_LaTeX 
where $d_{ij}=||\mathbf{x}_i-\boldsymbol{\theta}_j||$, $\boldsymbol{\theta}_j\text{s}$ and $u_{ij}^{FCM}\text{s}$ in \eqref{apcm_eta_init} are the final parameter estimates obtained by FCM. $\eta_j$ is updated at each iteration as the /mean absolute deviation/ of the most compatible to cluster $C_j$ data points which form a set $A_j$, i.e., $A_j=\{\mathbf{x}_i|u_{ij}=\max_r u_{ir}\}$.
#+BEGIN_LaTeX
\begin{equation}
\label{apcm_eta_update}
\eta_j=\frac{1}{n_j}\sum_{\mathbf{x}_i\in A_j}||\mathbf{x}_i-\boldsymbol{\mu}_j||
\end{equation}
#+END_LaTeX 
where $n_j$ and $\boldsymbol{\mu}_j$ are the number of points in $A_j$ and the mean vector of points in $A_j$ respectively.
*** Conditional Fuzzy Set
*** The UPCM Algorithm
The unified framework (UPCM) of PCM and APCM controls the clustering process from the perspective of uncertainty and UPCM can effectively discover the underlying structure of the dataset. However, UPCM has three parameters to choose.
** Our Algorithm
*** Motivations
1. The clustering algorithm should have as less parameters as possible, and the parameters should be intuitive to choose. APCM has to exert strong control over the bandwidth correction process, i.e., the estimated bandwidth is directly scaled by the user-specified parameter $\alpha$ which is difficult to choose basing on intuition. In order to handle the uncertainty of the estimated bandwidth in a more fuzzy way, UPCM introduces an uncertainty parameter $\sigma_v$ to regulate the shape of the membership function. However, choosing $\sigma_v$ depends on the noise-level parameter $\alpha$. It is shown in \cite{hou_pcm_2016} that a small $\alpha$ should correspond to a small $\sigma_v$, and a large $\alpha$ to a large $\sigma_v$. So we can exploit this intuition to cancel out the parameter $\sigma_v$.
2. The performance of clustering algorithm should be to background noise. We find that both APCM and UPCM suffer from the problem of background noise clusters, i.e., the background noise cluster are highly possible to become very large and finally merge with other physical clusters, so that there is only one big cluster in the final result.
*** Initialization
Initialization is very essential in APCM and UPCM. The fist issue is that the clustering algorithm needs an over-specified number of clusters, so that there should be at least one clusters placed near each physical cluster. 
It's shown in \cite{panda_comparing_2012} that kmeans is faster than FCM. So we choose kmeans get the initial partitions of the dataset. Let $A_j^{ini}$ be the set of points $\mathbf{x}_i$s that belong to cluster $C_j$ and $n_j$ be the size of $A_j^{ini}$. Then the we set
#+BEGIN_LaTeX
\begin{IEEEeqnarray}{ll}
\label{npcm_ini}
\boldsymbol{\theta}_j &= \frac{\Sigma_{i}\mathbf{x}_i}{n_j} \\
\eta_j &= \frac{1}{n_j}\sum_{\mathbf{x}_i}||\mathbf{x}_i-\boldsymbol{\theta}_j||
\end{IEEEeqnarray}
#+END_LaTeX 

The second issue that should be noticed is that the background noise clusters in the initial partition should be eliminated. We define the density of a cluster as:
#+BEGIN_LaTeX
\begin{equation}
\rho_j=\frac{n_j}{\eta_j^d}
\end{equation}
#+END_LaTeX
where $d$ is the dimension of $ \mathbf{x}_i$. Let $\rho_0=\max_j\rho_j$. Then cluster $C_j$ is a noise cluster and eliminated if $\rho_j<\rho_0$.
*** Modeling the relation between $\alpha$ and $\sigma_v$
In UPCM, the noise-level $\alpha$ is introduced to reduce the influence of points in other clusters $\boldsymbol{\theta}_{i\neq j}$ on the $\boldsymbol{\theta}_j$ update. The interplay between $\alpha$ and $\sigma_v$ is simple and intuitive, i.e., a large specification of noise level $\alpha$ indicate that fewer points are actually contributed to the adaption of prototype $\boldsymbol{\theta}_j$, so we should specify a large $\sigma_v$ to give the clusters in one physical cluster more mobility to merge \cite{hou_pcm_2016}. 

From , we can calculate the distance $d_{j\alpha}$ beyond which a point can't be used to contribute to the adaption of cluster $C_j$ by letting
#+BEGIN_LaTeX
\begin{equation}
\exp\left(-\frac{(d_{j\alpha})^2}{\gamma_j}\right)=\alpha,
\end{equation}
#+END_LaTeX
which leads to
#+BEGIN_LaTeX
\begin{equation}
\label{npcm_d_alpha}
d_{j\alpha}=\sqrt{-\ln\alpha}\left(\eta_j+\sqrt{-\ln\alpha}\sigma_v\right)
\end{equation}
#+END_LaTeX

When there is no uncertainty in the estimated bandwidth, we get $d_{j\alpha}^0=\sqrt{-\ln\alpha}\eta_j$. For a fixed $\alpha$, a large $\sigma_v$ will cause $d_{j\alpha}$ to become larger, which reduces the effect of $\alpha$. This observation, together with the intuitive interplay between $\alpha$ and $\sigma_v$ we get from UPCM, suggests that we can explicitly specify a relation between $\alpha$ and $\sigma_v$. More specifically, we define the effect of $\sigma_v$ as the correction of $d_{j\alpha}^0$ by considering the uncertainty of the estimated bandwidth:
#+BEGIN_LaTeX
\begin{equation}
\frac{d_{j\alpha}-d_{j\alpha}^0}{d_{j\alpha}^0}=\frac{\sqrt{-\ln\alpha}\sigma_v}{\eta_j}=0.2,
\end{equation}
#+END_LaTeX
which leads to 
#+BEGIN_LaTeX
\begin{equation}
\label{npcm_sig_alpha_relation}
\sigma_v=0.2\frac{\eta_j}{\sqrt{-\ln\alpha}}
\end{equation}
#+END_LaTeX
Note that we can choose a value that is not 0.2 in the above formulation. From \eqref{npcm_sig_alpha_relation}, we can see that the cluster with large $\eta_j$ has a large bandwidth estimation uncertainty $\sigma_v$, which meets the conclusion of UPCM.
The noise-level $\alpha$ reflects the xx of two close clusters in the dataset.
*** when the clustering process terminate
*** summarize the algorithm in Algorithm template






